<html xmlns="http://www.w3.org/1999/xhtml"
      xml:lang="en"
      lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="plone">



  <metal:head define-macro="topslot">

  </metal:head>

  

 <metal:head define-macro="javascript_head">
    <script>
      
      function compareDate(startDate, endDate, typeDate){
            
            if (typeDate == 'start') {
                  if (startDate.getTime() > endDate.getTime()) {
                        alert('End date should not be earlier than start date.');
                        if (endDate.getDate() >= 0 && endDate.getDate() <= 8) {
                              start_day = '0'+endDate.getDate().toString();
                        }else{
                              start_day = endDate.getDate().toString();
                        }
                        
                        
                        
                        if (endDate.getMonth() >= 0 && endDate.getMonth() <= 8) {
                              start_month = '0'+(endDate.getMonth()+1).toString();
                        }else{
                              start_month = (endDate.getMonth()+1).toString();
                        }
                        
                        start_year = endDate.getFullYear().toString();
                        $('select#edit_form_startDate_0_day').val(start_day);
                        $('select#edit_form_startDate_0_month').val(start_month);
                        $('select#edit_form_startDate_0_year').val(start_year);
                  }
            }else if ('end') {
                  
                  if (startDate.getTime() > endDate.getTime()) {
                        alert('End date should not be earlier than start date.');
                        if (startDate.getDate() >= 0 && startDate.getDate() <= 8) {
                              start_day = '0'+startDate.getDate().toString();
                        }else{
                              start_day = startDate.getDate().toString();
                        }
                        
                        
                        if (startDate.getMonth() >= 0 && startDate.getMonth() <= 8) {
                              start_month = '0'+(startDate.getMonth()+1).toString();
                        }else{
                              start_month = (startDate.getMonth()+1).toString();
                        }
                        
                        start_year = startDate.getFullYear().toString();
                        $('select#edit_form_endDate_1_day').val(start_day);
                        $('select#edit_form_endDate_1_month').val(start_month);
                        $('select#edit_form_endDate_1_year').val(start_year);
                        
                  }
            }
      }
      
      function createDate(day, month, year){
            return new Date((month+'/'+day+'/'+year).replace( /(\d{2})-(\d{2})-(\d{4})/, "$2/$1/$3"))
      }
      
      function createStartDate(){
            start_day = $('select#edit_form_startDate_0_day').val().toString();
            start_month = $('select#edit_form_startDate_0_month').val().toString();
            start_year = $('select#edit_form_startDate_0_year').val().toString();
            return createDate(start_day, start_month, start_year);
      }
      
      function createEndDate(){
            end_day = $('select#edit_form_endDate_1_day').val().toString();
            end_month = $('select#edit_form_endDate_1_month').val().toString();
            end_year = $('select#edit_form_endDate_1_year').val().toString();
            return createDate(end_day, end_month, end_year);
      }
      
      function dayValue(val){
            if (val >= 0 && val <= 8) {
                  return '0'+val.toString();
            }else{
                  return val.toString();
            }
      }
      
      function monthValue(val) {
            // ipasa ang value
      }
      
      function yearValue(val){
            return val.toString();
      }
    
$(document).ready(function(){
      $('span#edit_form_endDate_1_popup').hide();
      $('span#edit_form_startDate_0_popup').hide();
      
      start_day = $('select#edit_form_startDate_0_day').val().toString();
      start_month = $('select#edit_form_startDate_0_month').val().toString();
      start_year = $('select#edit_form_startDate_0_year').val().toString();
      end_day = $('select#edit_form_endDate_1_day').val().toString();
      end_month = $('select#edit_form_endDate_1_month').val().toString();
      end_year = $('select#edit_form_endDate_1_year').val().toString();
      
      start_date = createStartDate();
      end_date = createEndDate();
      
      
      
      
      setTimeout(function(){
          alert("To minimize possible loss of data, you are advised to periodically save your current work");
          setTimeout(function(){
            alert("To minimize possible loss of data, you are advised to periodically save your current work")
          },600000);
      },120000);
      
      $('select#edit_form_startDate_0_day').on('change',function(){
         new_day = $(this).val().toString();
         
         if (isNaN(createDate(new_day, start_month, start_year).getTime())) {
            alert('Not a valid date.');
            $(this).val(start_day);
         }else{
            //start_day = new_day;
            start_date = createStartDate();
            end_date = createEndDate();
            compareDate(start_date, end_date, 'start');
            start_day = $('select#edit_form_startDate_0_day').val().toString();
            start_month = $('select#edit_form_startDate_0_month').val().toString();
            start_year = $('select#edit_form_startDate_0_year').val().toString();
            end_day = $('select#edit_form_endDate_1_day').val().toString();
            end_month = $('select#edit_form_endDate_1_month').val().toString();
            end_year = $('select#edit_form_endDate_1_year').val().toString();
            
         }
         
      });
      
      $('select#edit_form_startDate_0_month').on('change', function(){
          new_month = $(this).val().toString();
          if (isNaN(createDate(start_day, new_month, start_year).getTime())) {
             alert('Not a valid date.');
             start_date.getMonth();
             $(this).val(start_month);
          }else{
            //start_month = new_month;
            start_date = createStartDate();
            end_date = createEndDate();
            compareDate(start_date, end_date, 'start');
            start_day = $('select#edit_form_startDate_0_day').val().toString();
            start_month = $('select#edit_form_startDate_0_month').val().toString();
            start_year = $('select#edit_form_startDate_0_year').val().toString();
            end_day = $('select#edit_form_endDate_1_day').val().toString();
            end_month = $('select#edit_form_endDate_1_month').val().toString();
            end_year = $('select#edit_form_endDate_1_year').val().toString();
            
          }
      });
      
      $('select#edit_form_startDate_0_year').on('change', function(){
          new_year = $(this).val().toString();
          
          if (new_year == '0000') {
            alert('Not a valid date.');
            $(this).val(start_year);
          }else{
            //start_year = new_year;
            start_date = createStartDate();
            end_date = createEndDate();
            compareDate(start_date, end_date, 'start');
            start_day = $('select#edit_form_startDate_0_day').val().toString();
            start_month = $('select#edit_form_startDate_0_month').val().toString();
            start_year = $('select#edit_form_startDate_0_year').val().toString();
            end_day = $('select#edit_form_endDate_1_day').val().toString();
            end_month = $('select#edit_form_endDate_1_month').val().toString();
            end_year = $('select#edit_form_endDate_1_year').val().toString();
          }
      });
      
      $('select#edit_form_endDate_1_day').on('change',function(){
         new_day = $(this).val().toString();
         
         if (isNaN(createDate(new_day, end_month, end_year).getTime())) {
            alert('Not a valid date.');
            $(this).val(end_day);
         }else{
            end_day = new_day;
            start_date = createStartDate();
            end_date = createEndDate();
            compareDate(start_date, end_date, 'end');
            start_day = $('select#edit_form_startDate_0_day').val().toString();
            start_month = $('select#edit_form_startDate_0_month').val().toString();
            start_year = $('select#edit_form_startDate_0_year').val().toString();
            end_day = $('select#edit_form_endDate_1_day').val().toString();
            end_month = $('select#edit_form_endDate_1_month').val().toString();
            end_year = $('select#edit_form_endDate_1_year').val().toString();
         }
         
      });
      
      $('select#edit_form_endDate_1_month').on('change', function(){
          new_month = $(this).val().toString();
          if (isNaN(createDate(end_day, new_month, end_year).getTime())) {
             alert('Not a valid date.');
             $(this).val(end_month);
          }else{
            end_month = new_month;
            start_date = createStartDate();
            end_date = createEndDate();
            compareDate(start_date, end_date, 'end');
            start_day = $('select#edit_form_startDate_0_day').val().toString();
            start_month = $('select#edit_form_startDate_0_month').val().toString();
            start_year = $('select#edit_form_startDate_0_year').val().toString();
            end_day = $('select#edit_form_endDate_1_day').val().toString();
            end_month = $('select#edit_form_endDate_1_month').val().toString();
            end_year = $('select#edit_form_endDate_1_year').val().toString();
            
          }
      });
      
      $('select#edit_form_endDate_1_year').on('change', function(){
          new_year = $(this).val().toString();
          
          if (new_year == '0000') {
            alert('Not a valid date.');
            $(this).val(end_year);
          }else{
            end_year = new_year;
            start_date = createStartDate();
            end_date = createEndDate();
            compareDate(start_date, end_date, 'end');
            start_day = $('select#edit_form_startDate_0_day').val().toString();
            start_month = $('select#edit_form_startDate_0_month').val().toString();
            start_year = $('select#edit_form_startDate_0_year').val().toString();
            end_day = $('select#edit_form_endDate_1_day').val().toString();
            end_month = $('select#edit_form_endDate_1_month').val().toString();
            end_year = $('select#edit_form_endDate_1_year').val().toString();
          }
      });
      
      
     })

</script>
  </metal:head>



  <body>

        <!-- header, h1 of Edit <Type>, schemata links and webdav lock message

        <metal:header define-macro="header">
            <h1>dssa</h1>
        </metal:header>
        
        -->
        

        <!-- typedesription, typeDescription from the content type -->

        <metal:typedescription define-macro="typedescription">

        </metal:typedescription>



        <!-- body, editform , fields, buttons, the default macro 

             contains a number of slots which usually provide enough

             ways to customise so often I use that macro and just 
y
             fill the slots

        -->

        <metal:body define-macro="body">

            <metal:default_body use-macro="here/edit_macros/macros/body">
              <!-- inside the fieldset but above all the fields -->

              <metal:block fill-slot="extra_top">

              </metal:block>

              

              <!-- listing of the fields, usually I won't customise this

              <metal:block fill-slot="widgets">

              </metal:block>

              -->



              <!-- below the fields above the formControls (hidden fields for refernce stuff is above buttons) -->

              <metal:block fill-slot="extra_bottom">

              </metal:block>



              <!-- within the formControls these are the default previous, next, save, cancel buttons -->

              <metal:block fill-slot="buttons">
                  <input class="context" value="Save" type="Submit" name="form.button.save">
                  <input class="standalone" value="Cancel" type="Submit" name="form.button.cancel">
              </metal:block>



              <!-- within the formControls a slot for extra buttons -->

              <metal:block fill-slot="extra_buttons">

              </metal:block>



            </metal:default_body>

        </metal:body>



        

        <!-- footer, by line created date etc. -->

        <metal:footer define-macro="footer">

        

        </metal:footer>



  </body>



</html>


